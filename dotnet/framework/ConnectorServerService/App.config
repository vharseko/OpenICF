<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <!-- Access these values via the property:
            System.Configuration.ConfigurationManager.AppSettings[key]
     -->
    <add key="connectorserver.certificateThumbprint" value="Use certutil and copy: Cert Hash(sha1) Example:1b0889cdf9e0cee904646bb8a3d0aa4f72035056" />
    <add key="connectorserver.maxFacadeLifeTime" value="0" />
    <add key="connectorserver.key" value="lmA6bMfENJGlIDbfrVtklXFK32s=" />
    <!-- Enable/Disable the logging proxy for all operations. -->
    <add key="logging.proxy" value="false" />
    <add key="disableWcf" value="true" />
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <system.serviceModel>
    <services>
      <service name="Org.ForgeRock.OpenICF.Framework.Service.WcfServiceLibrary.WcfWebsocket">
        <endpoint address="" binding="customBinding" bindingConfiguration="customWebSocket"
                  contract="Org.ForgeRock.OpenICF.Framework.Service.WcfServiceLibrary.IWebSocketService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <host>
          <baseAddresses>
            <!-- Remove trailing '/' otherwise response:  405 Method Not Allowed -->
            <add baseAddress="http://0.0.0.0:8759/openicf" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <bindings>
      <customBinding>
        <binding name="customWebSocket">
          <byteStreamMessageEncoding />
          <httpTransport authenticationScheme="Basic" realm="OpenICF">
            <webSocketSettings transportUsage="Always" createNotificationOnConnection="true"
                               subProtocol="v1.openicf.forgerock.org" />            
          </httpTransport>          
        </binding>
      </customBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="false" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  
          Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
          <!--Specify the Certificate- ->
          <serviceCertificate findValue="ConnectorServerSSLCertificate"
                              storeLocation="LocalMachine"
                              x509FindType="FindBySubjectName"
                              storeName="ConnectorServerSSLCertificate" /-->
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" /-->
  </system.serviceModel>
  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <remove name="Default" />
        <add name="console" />
        <add name="file" />
      </listeners>
    </trace>
    <sources>
      <source name="ConnectorServer" switchName="switch1">
        <listeners>
          <remove name="Default" />
          <add name="file" />
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="switch1" value="Information" />
    </switches>
    <sharedListeners>
      <add name="console" type="System.Diagnostics.ConsoleTraceListener" />
      <add name="file" type="System.Diagnostics.TextWriterTraceListener" initializeData="logs\ConnectorServerService.log"
           traceOutputOptions="DateTime">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Information" />
      </add>
    </sharedListeners>
  </system.diagnostics>
</configuration>